options {
// Signed image
flags = 0x08;		    
// FlexSPI1 the address determines if the application is XiP or SRAM based.
startAddress = 0x60000000;
// FlexSPI NOR memory must have IVT on 0x1000 offset	 
ivtOffset = 0x1000; 	   
// 0x60002000 resulting address of the app's vector table base address (startAddress + initialLoadSize)
initialLoadSize = 0x2000; 
//DCDFilePath = "dcd.bin"; // Path to the a DCD binary file    
}

sources {
    elfFile = extern(0);
}

constants {
    SEC_CSF_HEADER              = 20;
    SEC_CSF_INSTALL_SRK         = 21;
    SEC_CSF_INSTALL_CSFK        = 22;
    SEC_CSF_AUTHENTICATE_CSF    = 24;
    SEC_CSF_INSTALL_KEY         = 25;
    SEC_CSF_AUTHENTICATE_DATA   = 26;
    SEC_UNLOCK                  = 33;
}
/* Section header has to be always installed. */
section (SEC_CSF_HEADER; 
    Header_Version="4.5", 
    Header_HashAlgorithm="sha256", 
    Header_Engine="ANY", 
    Header_EngineConfiguration=0, 
    Header_CertificateFormat="x509",
    Header_SignatureFormat="CMS"
    )
{}
/* SRK_Table is always instaled in the slot 0 of internal key storage */
section (SEC_CSF_INSTALL_SRK; 
    InstallSRK_Table="cst/keys/SRK_1_2_3_4_table.bin", // "valid file path"
    /* SRK index within SRK table. Installation fails if the SRK revocation fuse with this index is burned. */
    InstallSRK_SourceIndex=0 
    )
{}

/* Install CSFK from the CSFK certificate using the SRK. */ 
/* CSFK is always installed in the slot 1 of internal key storage. */
section (SEC_CSF_INSTALL_CSFK; 
    InstallCSFK_File="cst/crts/CSF1_1_sha256_secp521r1_v3_usr_crt.pem"
    )
{}

/* Authenticate the CSF using the CSFK public key. */
section (SEC_CSF_AUTHENTICATE_CSF)
{}

/* Install IMG public key from the IMG certificate using the SRK. */
section (SEC_CSF_INSTALL_KEY; 
    InstallKey_File="cst/crts/IMG1_1_sha256_secp521r1_v3_usr_crt.pem", 
/* Authenticate this public key by SRK already installed in the slot 0. */
    InstallKey_VerificationIndex=0, // Accepts integer or string 
/* Install this public key in slot2 */
    InstallKey_TargetIndex=2) // Accepts integer or string 
{}

/* Authenticate data by IMG public key already installed in the slot 2. */
section (SEC_CSF_AUTHENTICATE_DATA;
    AuthenticateData_VerificationIndex=2) 
{}
section (SEC_UNLOCK;
    Unlock_Engine = "SNVS, OCOTP, CAAM", // "SRTC", "CAAM", SNVS and OCOTP 
    Unlock_features = "ZMK WRITE, SRK REVOKE" // "Refer to Table-24" 
    )
{}
