/*
 * Copyright 2023 NXPÂ 
 *
 * NXP Confidential and Proprietary. This software is owned or controlled by NXP and may only be used strictly
 * in accordance with the applicable license terms. By expressly accepting such terms or by downloading,
 * installing, activating and/or otherwise using the software, you are agreeing that you have read,
 * and that you agree to comply with and are bound by, such license terms. If you do not agree to be bound by
 * the applicable license terms, then you may not retain, install, activate or otherwise use the software.
 */

<#if configMemory?has_content>
<#list configMemory as memory>
<#if memory.RAM && !memory.defaultRAM>

    /* NOINIT section for ${memory.name} */
<#if memory.name=="SRAM_OC_ECC1">
    .noinit_${memory.alias} 0x20340000 (NOLOAD) : ALIGN(${bss_align})
    {
       PROVIDE(__start_noinit_${memory.alias} = .) ;
       PROVIDE(__start_noinit_${memory.name} = .) ;

       /* RAM5 fixed places for RPC_API */
       .ptr_ram5 = . ;
       KEEP(*(.noinit_RAM5_RPC_API)) /* 0x20340000 */
       . += ( .ptr_ram5 + 0xFC00 - . );

       .ptr_ram5 = . ;
       /* RAM5 fixed places */
       .ptr_ram5 = . ;
       KEEP(*(.noinit_RAM5_FIX0)) /* 0x2034FC00 */
       . += ( .ptr_ram5 + 0x80 - . );
       .ptr_ram5 = . ;
       KEEP(*(.noinit_RAM5_FIX1)) /* 0x2034FC80 */
       . += ( .ptr_ram5 + 0x80 - . );
       .ptr_ram5 = . ;
       KEEP(*(.noinit_RAM5_FIX2)) /* 0x2034FD00 */
       . += ( .ptr_ram5 + 0x80 - . );
       .ptr_ram5 = . ;
       KEEP(*(.noinit_RAM5_FIX3)) /* 0x2034FD80 */
       . = ALIGN(${bss_align}) ;
</#if>
<#if memory.alias!="RAM5">
    .noinit_${memory.alias} (NOLOAD) : ALIGN(${bss_align})
    {
       PROVIDE(__start_noinit_${memory.alias} = .) ;
       PROVIDE(__start_noinit_${memory.name} = .) ;
</#if>
<#include "extrasections_noinit.ldt">

       *(.noinit.$${memory.alias})
       *(.noinit.$${memory.name})
       *(.noinit.$${memory.alias}.*)
       *(.noinit.$${memory.name}.*)
       . = ALIGN(${bss_align}) ;
       PROVIDE(__end_noinit_${memory.alias} = .) ;
       PROVIDE(__end_noinit_${memory.name} = .) ;
    } > ${memory.name} AT> ${memory.name}
</#if>
</#list>
</#if>
